name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

# Set this permission if you are using a Federated Credential.
permissions:
  id-token: write
  contents: read

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config --auth-type client-credentials`

jobs:

  build:
    
    runs-on: ubuntu-latest

    steps:

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build api
        run: cd ./src/api && npm install && npm run build

      - name: Build web
        run: cd ./src/web && npm install && npm run build  

  deploy:
    if: github.ref_type == 'tag'
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3  

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Login az
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set az account
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az account set --subscription ${{vars.AZURE_SUBSCRIPTION_ID}}

      - name: Log in with Azure
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Add az environment
        run: |
          azd env new ${{ vars.AZURE_ENV_NAME }}

      - name: Configure az environment
        run: |
          azd env set AZURE_ENV_NAME ${{ vars.AZURE_ENV_NAME }}
          azd env set AZURE_LOCATION ${{ vars.AZURE_LOCATION }}
          azd env set AZURE_SUBSCRIPTION_ID ${{ vars.AZURE_SUBSCRIPTION_ID }}
        env:
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Provision and Deploy
        run: |
          azd up -e ${{ vars.AZURE_ENV_NAME }} --no-prompt
        env:
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}               

      # - name: Refresh azd env (pulls latest infrastructure provision)
      #   run: azd env refresh --no-prompt
      #   env:
      #     AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      #     AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      #     AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      #   working-directory: /home/runner/work/todo-nodejs-mongo-terraform/todo-nodejs-mongo-terraform

      # - name: Provision Infrastructure
      #   run: azd provision --no-prompt
      #   env:
      #     AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      #     AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      #     AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      #     ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      #     ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      #     RS_RESOURCE_GROUP: ${{ vars.RS_RESOURCE_GROUP }}
      #     RS_STORAGE_ACCOUNT: ${{ vars.RS_STORAGE_ACCOUNT }}
      #     RS_CONTAINER_NAME: ${{ vars.RS_CONTAINER_NAME }}
      #     AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}
          
      # - name: Deploy Application
      #   run: azd deploy --no-prompt
      #   env:
      #     AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      #     AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      #     AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
